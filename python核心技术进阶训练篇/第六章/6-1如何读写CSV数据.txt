Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
	如何读写CSV数据？   
	实际案例：有如下的CSV格式的数据，把其中volume列中大于50的数据存储到另一个CSV文件中。   
	解决方案：使用标准库中的csv模块，可以使用其中reader和writer完成csv文件读写。
	$ cat example.csv
		date,open,high,low,close,volume,adj close
		2016-10-24,4,6,10,6,37,5
		2016-1-6,5,6,6,8,49,10
		2016-4-18,12,10,7,8,35,6
		2016-8-14,5,9,5,5,85,9
		2016-4-16,4,9,6,9,90,6
		2016-11-4,12,8,12,10,81,6
		2016-8-9,8,13,5,3,36,7
		2016-5-6,4,12,4,11,63,5
		2016-9-27,7,12,7,13,90,10
		2016-9-20,10,8,5,7,37,11
		2016-5-14,8,11,12,12,34,10
		2016-10-14,5,4,6,12,25,11
		2016-5-19,4,8,6,11,64,10
		2016-10-28,9,6,3,9,73,7
		2016-12-9,5,13,3,13,32,6
		2016-7-29,10,5,4,5,95,10
		2016-10-12,11,9,8,9,71,9
		2016-4-24,5,11,5,6,34,8
		2016-4-10,12,8,10,5,42,8
		2016-8-28,8,11,10,12,48,9
		2016-11-4,10,6,4,10,39,11
		2016-3-21,12,5,4,13,47,12
		2016-3-19,9,10,11,10,25,6
		2016-5-19,6,12,10,11,43,5

SyntaxError: invalid syntax
>>> import os
>>> os.chdir("d:\git\Python\python核心技术进阶训练篇\第六章")
>>> import csv
>>> rf = open('example.csv','r')
>>> read = csv.reader(rf)
>>> wf = open('new.csv','w')
>>> next(read)
['date', 'open', 'high', 'low', 'close', 'volume', 'adj close']
>>> next(read)
['2016-10-24', '4', '6', '10', '6', '37', '5']
>>> write = csv.writer(wf)
>>> write.writerow(next(read))
24
>>> wf.flush()
>>> 
