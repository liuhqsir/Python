Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
  如何将多个小字符串拼成一个大的字符串？
  实际案例：在设计某网络程序时，我们自定义了一个基于UDP的网络协议。按照固定次序向服务器传递一系列参数：hwDetect:"<0112>" gxDepthBits:"<32>" gxResolution:"<1024x768>" gxRefresh:"<60>" fullSppha:"<1>" lodDist:"<100.0>" DistCull:"<500.0>"
  在我们的程序中我们将各个参数按次序收集到列表中：“<0112>","<32>","<1024x768>","<60>","<1>","<100.0>","<500.0>”。最终我们要把各个参数拼接成一个数据报进行发送。“<0112><32><1024x768><60><1><100.0><500.0>”
  解决方案：方法一：迭代列表，连续全胜+‘操作’依次拼接每一个字符串。方法二：使用str.join()方法，更加快速的拼接列表中所有字符串。
>>> s1 = 'abcdefg'
>>> s2 = '12345'
>>> s1 + s2
'abcdefg12345'
>>> str.__add__(s1,s2)
'abcdefg12345'
>>> pl = ["<0112>","<32>","<1024x768>","<60>","<1>","<100.0>","<500.0>"]
>>> s = ''
>>> for p in pl:
	s += p

	
>>> s
'<0112><32><1024x768><60><1><100.0><500.0>'
>>> help(str.join)
Help on method_descriptor:

join(self, iterable, /)
    Concatenate any number of strings.
    
    The string whose method is called is inserted in between each given string.
    The result is returned as a new string.
    
    Example: '.'.join(['ab', 'pq', 'rs']) -> 'ab.pq.rs'

>>> ':'.join(['abc','123','xyz'])
'abc:123:xyz'
>>> '.'.join(['ab', 'pq', 'rs'])
'ab.pq.rs'
>>> ''.join(pl)
'<0112><32><1024x768><60><1><100.0><500.0>'
