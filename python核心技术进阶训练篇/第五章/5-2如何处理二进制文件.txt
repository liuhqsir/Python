Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
    如何处理二进制文件？
    实际案例：wav是一种音频文件的格式，音频文件为二进制文件，wav文件由头部信息和音频采样数据构成，前44个字节为头部信息，包括声道数，采样频率，pcm位宽等等，后面是音频采样数据。
    使用python，分析一个wav文件头部信息，处理音频数据。
    WAV文件格式：https://images2017.cnblogs.com/blog/1177848/201710/1177848-20171012202504012-1615456423.png
    解决方案：open函数想以二进制模式打开文件，指定mode参数为‘b’；二进制数据可以用readinto,读入到提前分配好的buffer中，便于数据处理；解析二进制数据可以使用标准库中的struct模块的unpack方法。
>>> f = open('c:\\Users\\Administrator\\Music\\qiang.wav','rb')
>>> info = f.read(44)
>>> info
b'RIFF\x1a\xb6C\x02WAVEfmt \x10\x00\x00\x00\x01\x00\x02\x00D\xac\x00\x00\x10\xb1\x02\x00\x04\x00\x10\x00LIST>\x00\x00\x00'
>>> import struct
>>> struct.unpack('h',b'\x01\x02')
(513,)
>>> struct.unpack('>h',b'\x01\x02')
(258,)
>>> b'\x01\x02'
b'\x01\x02'
>>> struct.unpack('h',info[22:24])
(2,)
>>> struct.unpack('i',info[24:28])
(44100,)
>>> struct.unpack('h',info[20:22])
(1,)
>>> f.seek(0,2)
37991970
